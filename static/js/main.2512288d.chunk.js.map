{"version":3,"sources":["Components/About.js","Components/Home.js","Components/Navbar.js","Components/Support.js","Components/Sidebar.js","Components/User.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","src","type","Component","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buttonClick","e","preventDefault","inputUser","document","getElementById","fetch","value","then","res","status","setState","userWarning","console","error","Error","json","user","log","getUser","window","location","login","catch","inputChange","state","htmlFor","name","id","placeholder","onChange","onClick","Navbar","Navbar_NavBrand","Navbar_NavPanel","NavBrand","Link","to","alt","NavPanel","Support","Sidebar","liItemClick","querySelectorAll","forEach","item","classList","remove","target","parentElement","add","li","User","Components_Sidebar","App","validUser","_this2","BrowserRouter","Components_Navbar","Switch","Route","exact","path","render","Components_Home","handleGetUser","component","Boolean","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2512288d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"About\">\r\n        <div className=\"container-60\">\r\n          <h1 className=\"about-content\">\r\n            <embed className=\"about-img\" src=\"./images/triquetra-grey.svg\" type=\"\"/>\r\n            <span className=\"about-header\">Stagit</span>\r\n            is a skin, Github API is the soul.\r\n          </h1>\r\n          {/* <h3 className=\"about-wish\">Thanks.</h3> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { userWarning: false};\r\n  }\r\n\r\n  buttonClick = (e)  => {\r\n    e.preventDefault();\r\n    let inputUser = document.getElementById(\"input-username\");\r\n    fetch(\"https://api.github.com/users/\" + inputUser.value)\r\n    .then(res => {\r\n      if(res.status === 404) {\r\n        this.setState({userWarning: true});\r\n        console.error(Error(\"NotFoundError\": \"Username doesn't exist\"));\r\n        return false;\r\n      } else {\r\n        return res.json();\r\n      }\r\n    }).then(user => {\r\n      if(user) {\r\n        console.log(user);\r\n        this.props.getUser(user);\r\n        window.location = \"/user/\" + user.login;\r\n        // return <Redirect to={\"/user/\" + user.login} />\r\n      }\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  inputChange = () => {\r\n    this.setState({userWarning: false});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <form className=\"form-user\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input type=\"text\" name=\"username\" id=\"input-username\" className=\"form-input-username\" placeholder=\"e.g. octokit\"\r\n            onChange={this.inputChange}\r\n          />\r\n          <input type=\"submit\" id=\"button\" className=\"form-submit-user\" value=\"See Stats\"\r\n            onClick={this.buttonClick}\r\n          />\r\n          {this.state.userWarning && (<p className=\"form-warning\">Username doesn't exist.</p>)}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Navbar extends Component {\r\n  render() {  \r\n    return (\r\n      <div className=\"NavBar\">\r\n        <div className=\"nav-container\">\r\n          <NavBrand />\r\n          <NavPanel />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass NavBrand extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NavBrand\">\r\n        <Link className=\"neutral-link link-hover\" to=\"/\">\r\n          <img className=\"nav-brand-img\" src=\"/images/triquetra-light.svg\" alt=\"\" />\r\n          <span className=\"nav-brandname\">\r\n            Stagit\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass NavPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NavPanel\">      \r\n        <ul className=\"nav-list\">\r\n          <li className=\"nav-list-item\"><Link className=\"neutral-link link-hover\" to=\"/about\">About</Link></li>\r\n          <li className=\"nav-list-item\"><Link className=\"neutral-link link-hover\" to=\"/support\">Support</Link></li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass Support extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"support\">\r\n        <p>Support WORKS</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Support;","import React, { Component } from 'react';\r\n\r\nclass Sidebar extends Component {\r\n  constructor (props) {\r\n    super(props);    \r\n    this.state = { li: ['user', 'repos', 'gists', 'followers']};\r\n  }\r\n\r\n  liItemClick = (e) => {\r\n    let li = document.querySelectorAll('.sidebar-item');\r\n    li.forEach(item => item.classList.remove(\"active\"));\r\n    let target;\r\n    if(e.target.classList[0] === \"sidebar-item\") {\r\n      target = e.target;\r\n    } else {\r\n      target = e.target.parentElement;\r\n    }\r\n    target.classList.add(\"active\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Sidebar\">\r\n        <ul className=\"sidebar-nav\">\r\n          <li className=\"sidebar-item active\" onClick={this.liItemClick}>\r\n            <img className=\"sidebar-item-img\" src=\"/images/user.png\" alt=\"\"/>\r\n          </li>\r\n          <li className=\"sidebar-item\" onClick={this.liItemClick}>\r\n            <img className=\"sidebar-item-img\" src=\"/images/sample.png\" alt=\"\"/>\r\n          </li>\r\n          <li className=\"sidebar-item\" onClick={this.liItemClick}>\r\n            <img className=\"sidebar-item-img\" src=\"/images/sample.png\" alt=\"\"/>\r\n          </li>\r\n          <li className=\"sidebar-item\" onClick={this.liItemClick}>\r\n            <img className=\"sidebar-item-img\" src=\"/images/sample.png\" alt=\"\"/>\r\n          </li>\r\n          <li className=\"sidebar-item\" onClick={this.liItemClick}>\r\n            <img className=\"sidebar-item-img\" src=\"/images/sample.png\" alt=\"\"/>\r\n          </li>\r\n          <li className=\"sidebar-item\" onClick={this.liItemClick}>\r\n            <img className=\"sidebar-item-img\" src=\"/images/sample.png\" alt=\"\"/>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport Sidebar from './Sidebar';\r\n\r\nclass User extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"User\">\r\n        <Sidebar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport About from './Components/About';\nimport Home from './Components/Home';\nimport Navbar from './Components/Navbar';\nimport Support from './Components/Support';\nimport User from './Components/User';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      user: {},\n      validUser: false\n    };\n  }\n\n  handleGetUser(user) {\n\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar user={this.state.user} />\n          <Switch>\n            <Route exact path=\"/\"\n              render={() => (\n                <Home getUser={this.handleGetUser} />\n              )}>\n            </Route>\n            <Route exact path=\"/user/:user\" component={User}></Route>\n            <Route exact path=\"/about\" component={About}></Route>\n            <Route exact path=\"/support\" component={Support}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}